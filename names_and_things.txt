
We maintain a strong distinction between names and things.
Names are character strings, while things are motes.
Names are found in lexicons, and can be placed into the current
lexicon with the NAME [name] [thing] operator.

As the current lexicon does not persist beyond the life
of the parser containing it, the REMEMBER [name] operator
serves to copy a name to thing mapping into the lexicon
one level out from the current lexicon.

Within a persistent WORKSPACE, REMEMBER serves to make a name
persist.

Within a SAFE, REMEMBER will write names into the empty outer
lexicon.

the result of a SAFE [keyword-list] [sequence] operation is
that lexicon, allowing SAFE to be used to construct lexicon
objects.

Reference:

NAME name thing

stores the thing into the parser's current lexicon under the name. Name must be a string.

REMEMBER name

Copies the thing in the parser's current lexicon, if any, to the outer lexicon.

FORGET name

Deletes the lexicon entry for name in both the current and outer lexicons.

** IMPORTANT:  do not prefix the name in the REMEMBER and FORGET operators
with the STRING string-escaping operator. They have that built into them, and
doing so will overwrite or erase the STRING operator.

LIST

list all available names in the current parser's lexicon, by level

WORKSPACE

creates and returns a new workspace mote one in from the current scope
